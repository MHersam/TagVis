
db.createCollection( 'user', {validator: {$jsonSchema: {bsonType: 'object',required: [         'display_name'],properties: {display_name: {bsonType: 'string'},mendeley: {bsonType: 'object',
required: [         'refresh_token',          'id'],properties: {refresh_token: {bsonType: 'string'},id: {bsonType: 'string', dropDups, index},first_name: {bsonType: 'string'},last_name: {bsonType: 'string'},link: {bsonType: 'string'},photo_url: {bsonType: 'string'}}},tagvis: {bsonType: 'object',
required: [         'username'],properties: {username: {bsonType: 'string'},photo: {bsonType: 'binData'}}},ldap: {bsonType: 'object',
required: [         'username'],properties: {username: {bsonType: 'string'},photo_url: {bsonType: 'string'}}}}         }      }});  
db.createCollection( 'document', {validator: {$jsonSchema: {bsonType: 'object',required: [         'user'],properties: {title: {bsonType: 'string'},tags: {bsonType: 'array',items: {bsonType: 'string'}},abstract: {bsonType: 'string'},year: {bsonType: 'int'},created: {bsonType: 'date'},last_modified: {bsonType: 'date'},keywords: {bsonType: 'array',items: {bsonType: 'string'}},citation_count: {bsonType: 'int'},authors: {bsonType: 'array',items: {
required: [],properties: {first_name: {bsonType: 'string'},last_name: {bsonType: 'string'}}}},open_citations: {bsonType: 'object',
required: [         'references',          'citations',          'accessed'],properties: {references: {bsonType: 'array',items: {bsonType: 'string'}},citations: {bsonType: 'array',items: {bsonType: 'string'}},accessed: {bsonType: 'date'}}},semantic_scholar: {bsonType: 'object',
required: [         'citations',          'references',          'accessed'],properties: {citations: {bsonType: 'array',items: {bsonType: 'object'}},references: {bsonType: 'array',items: {bsonType: 'object'}},accessed: {bsonType: 'date'},topics: {bsonType: 'array',items: {bsonType: 'string'}}}},user: {bsonType: 'objectId'},identifiers: {bsonType: 'object',
required: [],properties: {doi: {bsonType: 'string'},arxiv: {bsonType: 'string'},mag: {bsonType: 'string'},acl: {bsonType: 'string'},pmid: {bsonType: 'string'},isbn: {bsonType: 'string'},issn: {bsonType: 'string'},oci: {bsonType: 'string'},s2: {bsonType: 'string'},scopus: {bsonType: 'string'},corpusid: {bsonType: 'string'}}}}         }      }});  
db.createCollection( 'session', {validator: {$jsonSchema: {bsonType: 'object',required: [         'user',          'graph',          'created',          'name'],properties: {user: {bsonType: 'objectId'},graph: {bsonType: 'object',
required: [         'links',          'nodes'],properties: {links: {bsonType: 'array',items: {
required: [         'id',          'source',          'target',          'distance'],properties: {tags: {bsonType: 'array',items: {bsonType: 'string'}},id: {bsonType: 'string'},source: {bsonType: 'objectId'},target: {bsonType: 'objectId'},distance: {bsonType: 'double'},jaccard_coefficient: {bsonType: 'double'}}}},nodes: {bsonType: 'array',items: {
required: [         'id',          'document'],properties: {id: {bsonType: 'string'},tags: {bsonType: 'array',items: {bsonType: 'string'}},document: {bsonType: 'objectId'}}}}}},created: {bsonType: 'date'},name: {bsonType: 'string'},tags: {bsonType: 'array',items: {
required: [         'name',          'weight',          'highlighted',          'ignored'],properties: {name: {bsonType: 'string'},weight: {bsonType: 'int'},highlighted: {bsonType: 'bool'},ignored: {bsonType: 'bool'}}}}}         }      }});  
db.createCollection( 'group', {validator: {$jsonSchema: {bsonType: 'object',required: [         'name',          'created',          'last_modified'],properties: {name: {bsonType: 'string'},created: {bsonType: 'date'},last_modified: {bsonType: 'date'}}         }      }});  
db.createCollection( 'membership', {validator: {$jsonSchema: {bsonType: 'object',required: [         'user',          'group'],properties: {user: {bsonType: 'objectId'},group: {bsonType: 'objectId'}}         }      }});  
db.createCollection( 'group_document', {validator: {$jsonSchema: {bsonType: 'object',required: [         'document',          'group'],properties: {document: {bsonType: 'objectId'},group: {bsonType: 'objectId'}}         }      }});  